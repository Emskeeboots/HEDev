//::///////////////////////////////////////////////
//:: Throwing Exploit Fix
//:: sh_twexploit_eq
//:: Created By: ShaDoOoW
//:: Created On: 2009-01-15
//:: Cleaned up by Meaglyn 8/28/13
//:://////////////////////////////////////////////

#include "x2_inc_switches"


void main() {

        if (GetLocalInt(GetModule(), "DEVELOPMENT")) {
                return;
        }

        object oModule = OBJECT_SELF;
        int nEvent = GetUserDefinedItemEventNumber();

        int nSlot;
        if ( nEvent == X2_ITEM_EVENT_EQUIP) {
                object oItem = GetPCItemLastEquipped();
                object oPC   = GetPCItemLastEquippedBy();

        //1.71: fix for losing skin in ELC/ILR module settings
                /* not sure this is needed but in case it becomes so 
                if(GetIsPC(oPC) && GetTag(oItem) == "x3_it_pchide" && GetLocalObject(oPC,"oX3_Skin") == OBJECT_INVALID) {
                        object oSkin = CopyItem(oItem,oPC,TRUE);
                        SetLocalObject(oPC,"oX3_Skin",oSkin);
                        DelayCommand(1.0,AssignCommand(oPC,SKIN_SupportEquipSkin(oSkin)));
                        SetDroppableFlag(oSkin,FALSE);
                }
                */


        //this situation will happen only when PC re-enters server
        //in special case game doesn't have to equip certain items if character
        //no more fullfills UMD or ILR, this part will clean up slot variable
        //in order to make sure that such player won't be booted next time
        //he equips something into the same slot

                if(!GetIsObjectValid(oPC) && oPC != OBJECT_INVALID) {
                        oPC = GetItemPossessor(oItem);
                        for(;nSlot < NUM_INVENTORY_SLOTS;nSlot++){
                                SetLocalInt(oPC,"SLOT_"+IntToString(nSlot),0);
                        }
                        return;
                }

        //this will fill variable nSlot with
        //constant for slot which item was before
        //unequipped
                for(;nSlot < 14;nSlot++) {
                        if(GetItemInSlot(nSlot,oPC) == oItem) {
                                break;
                        }
                }

        //no need to control creature item slots - use 14 above so loop has to run fewer times.
        // then this check is not needed. Left for sanity check in case someone changes the loop condition 
                if(nSlot > 13) {
                        return;
                }

                if(GetLocalInt(oPC,"SLOT_"+IntToString(nSlot))) {
                        string sLog = "THROWING WEAPON EXPLOITER CAUGHT! ACCOUNT: '"
                            + GetPCPlayerName(oPC)+"' IP: '"+GetPCIPAddress(oPC)
                            + "' CDKEY: '"+GetPCPublicCDKey(oPC,TRUE)+"'" + " nSlot = " + IntToString(nSlot) + ".";
                        SendMessageToAllDMs(sLog);     //DEBUG message to all DMs with all informations about exploiter
                        WriteTimestampedLogEntry(sLog);//DEBUG message to log file with all informations about exploiter
                        if(GetPCPublicCDKey(oPC) == "") {
                               SendMessageToPC(oPC,sLog);     //DEBUG message to exploiter himself with all his informations
                               SendMessageToPC(oPC,"Note: booting doesn't work in single player game.");
                       }
            //BootPC(oPC);                 //This will boot PC from game as it is only way to fix the exploit advantages
                       return;
               }
               SetLocalInt(oPC,"SLOT_"+IntToString(nSlot),TRUE);
               //SendMessageToPC(oPC,"equip: '"+GetName(oItem)+"' id: '"+ObjectToString(oItem)+"'");//DEBUG for DEMO module
               return;
        }

        if (nEvent == X2_ITEM_EVENT_UNEQUIP) {
                object oItem = GetPCItemLastUnequipped();
                object oPC   = GetPCItemLastUnequippedBy();
        //this will fill variable nSlot with
        //constant for slot which item was before
        //unequipped
                for(;nSlot < 14;nSlot++) {
                        if(GetItemInSlot(nSlot,oPC) == oItem) {
                                break;
                        }
                }
        //no need to control creature item slots - use 14 above so loop has to run fewer times.
        // then this check is not needed. Left for sanity check in case someone changes the loop condition 
                if(nSlot > 13) {
                        return;
                }

                DeleteLocalInt(oPC,"SLOT_"+IntToString(nSlot));
        //SendMessageToPC(oPC,"unequip: '"+GetName(oItem)+"' id: '"+ObjectToString(oItem)+"'");//DEBUG for DEMO module

                AssignCommand(oPC, ClearAllActions(TRUE));
        }
}        
